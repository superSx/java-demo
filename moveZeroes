input：0 1 0 3 12 
output：1 3 12 0 0

问题描述：给定一个列表，使0都放到非0值的后面，且非零值相对位置不变。
in_place/
最佳答案：遍历一遍数组，当遇到非0值时，插入cur位置，cur++。
cur表示当前应插入位置，是cur<=数组指针。
public void moveZeroes2(int[] nums) {
		if(nums==null||nums.length==0||nums.length==1) return;
		int cur=0;
		for(int i=0;i<nums.length;i++){
			if (nums[i]!=0) {
				int tmp=nums[i];
				nums[i]=nums[cur];
				nums[cur++]=tmp;
			}
		}
	}
  
  一般答案
  从0开始，找到第一个0的位置，找到非0的位置，然后交换。
  if(nums==null||nums.length==0||nums.length==1) return;
		int i=0,index=0,index2=0;
		boolean flag1=false,flag2=false;
		while(i<nums.length){
			for(int j=i;j<nums.length;j++){
				if (nums[j]==0) {
					index=j;
					flag1=true;
					break;
				}
			}
			for (int j=index+1;j<nums.length;j++){
				if(nums[j]!=0) {
					index2=j;
					flag2=true;
					break;
				}
			}
			if(flag1&&flag2){
				nums[index]=nums[index2];
				nums[index2]=0;
				flag1=false;
				flag2=false;
				i=index+1;
			}else{
				i++;
			}
		}
