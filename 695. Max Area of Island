问题描述，
在一个二维数组中找到最大的岛（最多一连在一块）

解法：
用一个布尔数组来描述每个位置的状态位。当遍历过这位置则置为true。
主要思想是深度优先搜索。

  public int maxAreaOfIsland(int[][] grid) {
        if(grid==null) return 0;
        int row=grid.length,col=grid[0].length,max=0;
        boolean[][] flags=new boolean[row][col];
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(!flags[i][j]&&grid[i][j]==1){
                    int island=depthsearch(i,j,grid,flags);
                    if(max<island){
                        max=island;
                    }
                    
                }
            }
        }
        return max;
    }
    public int depthsearch(int i,int j,int[][] grid,boolean[][] flags){
        flags[i][j]=true;
        int row=flags.length,col=flags[0].length;
        int result=1;
        if(i+1<row&&grid[i+1][j]==1&&!flags[i+1][j]){
            result+=depthsearch(i+1,j,grid,flags);
        }
        if(j+1<col&&grid[i][j+1]==1&&!flags[i][j+1]){
            result+=depthsearch(i,j+1,grid,flags);
        }
        if(i-1>=0&&grid[i-1][j]==1&&!flags[i-1][j]){
            result+=depthsearch(i-1,j,grid,flags);
        }
        if(j-1>=0&&grid[i][j-1]==1&&!flags[i][j-1]){
            result+=depthsearch(i,j-1,grid,flags);
        }
        return result;
    }
